// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE
'use strict';

var Belt_Id = require("bs-platform/lib/js/belt_Id.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Day3Util = require("./Day3Util.bs.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_MutableMap = require("bs-platform/lib/js/belt_MutableMap.js");

function cmp(param, param$1) {
  var c = Caml_obj.caml_compare(param[0], param$1[0]);
  if (c !== 0) {
    return c;
  } else {
    return Caml_obj.caml_compare(param[1], param$1[1]);
  }
}

var SquareHitCmp = Belt_Id.MakeComparable(/* module */[/* cmp */cmp]);

function addSquaresFromClaim(param, claimMap) {
  var dimensions = param[/* dimensions */2];
  var ySize = dimensions[1];
  var fromEdges = param[/* fromEdges */1];
  var edgeY = fromEdges[1];
  var edgeX = fromEdges[0];
  for(var x = edgeX ,x_finish = (edgeX + dimensions[0] | 0) - 1 | 0; x <= x_finish; ++x){
    for(var y = edgeY ,y_finish = (edgeY + ySize | 0) - 1 | 0; y <= y_finish; ++y){
      var existingCountForSquare = Belt_MutableMap.get(claimMap, /* tuple */[
            x,
            y
          ]);
      Belt_MutableMap.set(claimMap, /* tuple */[
            x,
            y
          ], existingCountForSquare !== undefined ? existingCountForSquare + 1 | 0 : 1);
    }
  }
  return /* () */0;
}

function calculateClaimsPerLocation(claims) {
  var claimMap = Belt_MutableMap.make(SquareHitCmp);
  Belt_List.forEach(claims, (function (aClaim) {
          return addSquaresFromClaim(aClaim, claimMap);
        }));
  return claimMap;
}

function locationsWithOverlap(overlaps) {
  return Belt_MutableMap.reduce(overlaps, 0, (function (total, _key, value) {
                var match = value > 1;
                if (match) {
                  return total + 1 | 0;
                } else {
                  return total;
                }
              }));
}

console.log(locationsWithOverlap(calculateClaimsPerLocation(Day3Util.readClaims(/* () */0))));

exports.SquareHitCmp = SquareHitCmp;
exports.addSquaresFromClaim = addSquaresFromClaim;
exports.calculateClaimsPerLocation = calculateClaimsPerLocation;
exports.locationsWithOverlap = locationsWithOverlap;
/* SquareHitCmp Not a pure module */
